<<<<<<< HEAD
.TH "D:/user/github/Charger6kW/MSP_STM_9_RDD_plusMSP/MSP430/flash.h" 3 "Sun Nov 29 2020" "Version 9" "Charger6kW" \" -*- nroff -*-
=======
.TH "D:/userSSD/github/Charger6kW/MSP_STM_9_RDD_plusMSP/MSP430/flash.h" 3 "Mon Nov 30 2020" "Version 9" "Charger6kW" \" -*- nroff -*-
>>>>>>> development
.ad l
.nh
.SH NAME
D:/userSSD/github/Charger6kW/MSP_STM_9_RDD_plusMSP/MSP430/flash.h
.SH SYNOPSIS
.br
.PP
\fC#include 'debug\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBADDR_SPACE_SIZE\fP   0x01000000ul"
.br
.ti -1c
.RI "#define \fBERASE_SIZE1\fP   0x00001000ul"
.br
.ti -1c
.RI "#define \fBERASE_MASK1\fP   ( \fBADDR_SPACE_SIZE\fP \- \fBERASE_SIZE1\fP )"
.br
.ti -1c
.RI "#define \fBERASE_SIZE2\fP   0x00008000ul"
.br
.ti -1c
.RI "#define \fBERASE_MASK2\fP   ( \fBADDR_SPACE_SIZE\fP \- \fBERASE_SIZE2\fP )"
.br
.ti -1c
.RI "#define \fBERASE_SIZE3\fP   0x00010000ul"
.br
.ti -1c
.RI "#define \fBERASE_MASK3\fP   ( \fBADDR_SPACE_SIZE\fP \- \fBERASE_SIZE3\fP )"
.br
.ti -1c
.RI "#define \fBBLOCK_SIZE\fP   \fBERASE_SIZE1\fP"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_LOCAL_CFG_BLOCKS\fP   1"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_REMOTE_CFG_BLOCKS\fP   1"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_STATS_BLOCKS\fP   14"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_FLAG_BLOCKS\fP   2"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_USER_CFG_BLOCKS\fP   1"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_FACT_CFG_BLOCKS\fP   1"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_EVNT_CFG_BLOCKS\fP   1"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_CALIB_BLOCKS\fP   1"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_MISC_STATE_BLOCKS\fP   1"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_PERSISTENT_BLOCKS\fP   1"
.br
.ti -1c
.RI "#define \fBFLASH_ORIGIN\fP   0x00000000ul"
.br
.ti -1c
.RI "#define \fBFLASH_LOCAL_CFG_ADDR\fP   \fBFLASH_ORIGIN\fP"
.br
.ti -1c
.RI "#define \fBFLASH_REMOTE_CFG_ADDR\fP   ( \fBFLASH_LOCAL_CFG_ADDR\fP + \fBFLASH_NUM_LOCAL_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_STATS_ADDR\fP   ( \fBFLASH_REMOTE_CFG_ADDR\fP + \fBFLASH_NUM_REMOTE_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_FLAG_ADDR\fP   ( \fBFLASH_STATS_ADDR\fP + \fBFLASH_NUM_STATS_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_USER_CFG_ADDR\fP   ( \fBFLASH_FLAG_ADDR\fP + \fBFLASH_NUM_FLAG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_FACT_CFG_ADDR\fP   ( \fBFLASH_USER_CFG_ADDR\fP + \fBFLASH_NUM_USER_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_EVNT_CFG_ADDR\fP   ( \fBFLASH_FACT_CFG_ADDR\fP + \fBFLASH_NUM_FACT_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_CALIB_ADDR\fP   ( \fBFLASH_EVNT_CFG_ADDR\fP + \fBFLASH_NUM_EVNT_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_MISC_STATE_ADDR\fP   ( \fBFLASH_CALIB_ADDR\fP + \fBFLASH_NUM_CALIB_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_PERSISTENT_ADDR\fP   ( \fBFLASH_MISC_STATE_ADDR\fP + \fBFLASH_NUM_MISC_STATE_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_TELEM_START_ADDR\fP   ( \fBFLASH_PERSISTENT_ADDR\fP + \fBFLASH_NUM_PERSISTENT_BLOCKS\fP*\fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_TELEM_END_ADDR\fP   0x00200000ul"
.br
.ti -1c
.RI "#define \fBFLASH_NUM_TELEM_BLOCKS\fP   ( ( \fBFLASH_TELEM_END_ADDR\fP \- \fBFLASH_TELEM_START_ADDR\fP ) / \fBBLOCK_SIZE\fP )"
.br
.ti -1c
.RI "#define \fBFLASH_BUFFER_SIZE\fP   192"
.br
.ti -1c
.RI "#define \fBFLASH_readIq\fP(a)   \fBFLASH_readS16\fP( a )"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBFlashMode_\fP \fBFlashMode\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBFlashMode_\fP { \fBFLASH_IDLE\fP = 0, \fBFLASH_ERASE_ACTIVE\fP, \fBFLASH_WRITE_ACTIVE\fP, \fBFLASH_READ_ACTIVE\fP, \fBFLASH_ERASEBUSY_ACTIVE\fP, \fBFLASH_WRITEBUSY_ACTIVE\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBFLASH_init\fP (void)"
.br
.ti -1c
.RI "unsigned char \fBFLASH_getStatus\fP (void)"
.br
.ti -1c
.RI "int \fBFLASH_erase\fP (unsigned long dstAddr, unsigned long len, void(*pCall)(int))"
.br
.ti -1c
.RI "\fBFlashMode\fP \fBFLASH_getMode\fP (void)"
.br
.ti -1c
.RI "int \fBFLASH_eraseBlockBusy\fP (unsigned long blockAddr)"
.br
.ti -1c
.RI "int \fBFLASH_writeByteBusy\fP (unsigned long addr, unsigned char byte)"
.br
.ti -1c
.RI "int \fBFLASH_startWrite\fP (unsigned long dstAddr, unsigned long len)"
.br
.ti -1c
.RI "int \fBFLASH_writeStr\fP (unsigned char *pSrc, unsigned long len)"
.br
.ti -1c
.RI "void \fBFLASH_endWriteData\fP (void)"
.br
.ti -1c
.RI "void \fBFLASH_endWrite\fP (void)"
.br
.ti -1c
.RI "int \fBFLASH_getFreeBufferSpace\fP (void)"
.br
.ti -1c
.RI "void \fBFLASH_tick\fP (void)"
.br
.ti -1c
.RI "int \fBFLASH_readStr\fP (unsigned char *pDst, unsigned long srcAddr, unsigned long len, int leaveInReadMode)"
.br
.ti -1c
.RI "unsigned char \fBFLASH_readU08\fP (unsigned long addr)"
.br
.ti -1c
.RI "unsigned int \fBFLASH_readU16\fP (unsigned long addr)"
.br
.ti -1c
.RI "int \fBFLASH_readS16\fP (unsigned long addr)"
.br
.ti -1c
.RI "unsigned long \fBFLASH_readU32\fP (unsigned long addr)"
.br
.ti -1c
.RI "unsigned long long \fBFLASH_readU64\fP (unsigned long addr)"
.br
.ti -1c
.RI "float \fBFLASH_readF32\fP (unsigned long addr)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ADDR_SPACE_SIZE   0x01000000ul"

.PP
Definition at line 18 of file flash\&.h\&.
.SS "#define BLOCK_SIZE   \fBERASE_SIZE1\fP"

.PP
Definition at line 26 of file flash\&.h\&.
.SS "#define ERASE_MASK1   ( \fBADDR_SPACE_SIZE\fP \- \fBERASE_SIZE1\fP )"

.PP
Definition at line 20 of file flash\&.h\&.
.SS "#define ERASE_MASK2   ( \fBADDR_SPACE_SIZE\fP \- \fBERASE_SIZE2\fP )"

.PP
Definition at line 22 of file flash\&.h\&.
.SS "#define ERASE_MASK3   ( \fBADDR_SPACE_SIZE\fP \- \fBERASE_SIZE3\fP )"

.PP
Definition at line 24 of file flash\&.h\&.
.SS "#define ERASE_SIZE1   0x00001000ul"

.PP
Definition at line 19 of file flash\&.h\&.
.SS "#define ERASE_SIZE2   0x00008000ul"

.PP
Definition at line 21 of file flash\&.h\&.
.SS "#define ERASE_SIZE3   0x00010000ul"

.PP
Definition at line 23 of file flash\&.h\&.
.SS "#define FLASH_BUFFER_SIZE   192"

.PP
Definition at line 71 of file flash\&.h\&.
.SS "#define FLASH_CALIB_ADDR   ( \fBFLASH_EVNT_CFG_ADDR\fP + \fBFLASH_NUM_EVNT_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 63 of file flash\&.h\&.
.SS "#define FLASH_EVNT_CFG_ADDR   ( \fBFLASH_FACT_CFG_ADDR\fP + \fBFLASH_NUM_FACT_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 62 of file flash\&.h\&.
.SS "#define FLASH_FACT_CFG_ADDR   ( \fBFLASH_USER_CFG_ADDR\fP + \fBFLASH_NUM_USER_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 61 of file flash\&.h\&.
.SS "#define FLASH_FLAG_ADDR   ( \fBFLASH_STATS_ADDR\fP + \fBFLASH_NUM_STATS_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 59 of file flash\&.h\&.
.SS "#define FLASH_LOCAL_CFG_ADDR   \fBFLASH_ORIGIN\fP"

.PP
Definition at line 56 of file flash\&.h\&.
.SS "#define FLASH_MISC_STATE_ADDR   ( \fBFLASH_CALIB_ADDR\fP + \fBFLASH_NUM_CALIB_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 64 of file flash\&.h\&.
.SS "#define FLASH_NUM_CALIB_BLOCKS   1"

.PP
Definition at line 51 of file flash\&.h\&.
.SS "#define FLASH_NUM_EVNT_CFG_BLOCKS   1"

.PP
Definition at line 49 of file flash\&.h\&.
.SS "#define FLASH_NUM_FACT_CFG_BLOCKS   1"

.PP
Definition at line 48 of file flash\&.h\&.
.SS "#define FLASH_NUM_FLAG_BLOCKS   2"

.PP
Definition at line 45 of file flash\&.h\&.
.SS "#define FLASH_NUM_LOCAL_CFG_BLOCKS   1"

.PP
Definition at line 42 of file flash\&.h\&.
.SS "#define FLASH_NUM_MISC_STATE_BLOCKS   1"

.PP
Definition at line 52 of file flash\&.h\&.
.SS "#define FLASH_NUM_PERSISTENT_BLOCKS   1"

.PP
Definition at line 53 of file flash\&.h\&.
.SS "#define FLASH_NUM_REMOTE_CFG_BLOCKS   1"

.PP
Definition at line 43 of file flash\&.h\&.
.SS "#define FLASH_NUM_STATS_BLOCKS   14"

.PP
Definition at line 44 of file flash\&.h\&.
.SS "#define FLASH_NUM_TELEM_BLOCKS   ( ( \fBFLASH_TELEM_END_ADDR\fP \- \fBFLASH_TELEM_START_ADDR\fP ) / \fBBLOCK_SIZE\fP )"

.PP
Definition at line 69 of file flash\&.h\&.
.SS "#define FLASH_NUM_USER_CFG_BLOCKS   1"

.PP
Definition at line 47 of file flash\&.h\&.
.SS "#define FLASH_ORIGIN   0x00000000ul"

.PP
Definition at line 55 of file flash\&.h\&.
.SS "#define FLASH_PERSISTENT_ADDR   ( \fBFLASH_MISC_STATE_ADDR\fP + \fBFLASH_NUM_MISC_STATE_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 65 of file flash\&.h\&.
.SS "#define FLASH_readIq(a)   \fBFLASH_readS16\fP( a )"

.PP
Definition at line 109 of file flash\&.h\&.
.SS "#define FLASH_REMOTE_CFG_ADDR   ( \fBFLASH_LOCAL_CFG_ADDR\fP + \fBFLASH_NUM_LOCAL_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 57 of file flash\&.h\&.
.SS "#define FLASH_STATS_ADDR   ( \fBFLASH_REMOTE_CFG_ADDR\fP + \fBFLASH_NUM_REMOTE_CFG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 58 of file flash\&.h\&.
.SS "#define FLASH_TELEM_END_ADDR   0x00200000ul"

.PP
Definition at line 67 of file flash\&.h\&.
.SS "#define FLASH_TELEM_START_ADDR   ( \fBFLASH_PERSISTENT_ADDR\fP + \fBFLASH_NUM_PERSISTENT_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 66 of file flash\&.h\&.
.SS "#define FLASH_USER_CFG_ADDR   ( \fBFLASH_FLAG_ADDR\fP + \fBFLASH_NUM_FLAG_BLOCKS\fP*\fBBLOCK_SIZE\fP )"

.PP
Definition at line 60 of file flash\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef enum \fBFlashMode_\fP \fBFlashMode\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBFlashMode_\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFLASH_IDLE \fP\fP
.TP
\fB\fIFLASH_ERASE_ACTIVE \fP\fP
.TP
\fB\fIFLASH_WRITE_ACTIVE \fP\fP
.TP
\fB\fIFLASH_READ_ACTIVE \fP\fP
.TP
\fB\fIFLASH_ERASEBUSY_ACTIVE \fP\fP
.TP
\fB\fIFLASH_WRITEBUSY_ACTIVE \fP\fP
.PP
Definition at line 73 of file flash\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void FLASH_endWrite (void)"

.PP
Definition at line 207 of file flash\&.c\&.
.SS "void FLASH_endWriteData (void)"

.PP
Definition at line 199 of file flash\&.c\&.
.SS "int FLASH_erase (unsigned long dstAddr, unsigned long len, void(*)(int) pCall)"

.PP
Definition at line 141 of file flash\&.c\&.
.SS "int FLASH_eraseBlockBusy (unsigned long blockAddr)"

.PP
Definition at line 73 of file flash\&.c\&.
.SS "int FLASH_getFreeBufferSpace (void)"

.PP
Definition at line 221 of file flash\&.c\&.
.SS "\fBFlashMode\fP FLASH_getMode (void)"

.PP
Definition at line 67 of file flash\&.c\&.
.SS "unsigned char FLASH_getStatus (void)"

.PP
Definition at line 61 of file flash\&.c\&.
.SS "void FLASH_init (void)"

.PP
Definition at line 50 of file flash\&.c\&.
.SS "float FLASH_readF32 (unsigned long addr)"

.PP
Definition at line 398 of file flash\&.c\&.
.SS "int FLASH_readS16 (unsigned long addr)"

.PP
Definition at line 384 of file flash\&.c\&.
.SS "int FLASH_readStr (unsigned char * pDst, unsigned long srcAddr, unsigned long len, int leaveInReadMode)"

.PP
Definition at line 342 of file flash\&.c\&.
.SS "unsigned char FLASH_readU08 (unsigned long addr)"

.PP
Definition at line 370 of file flash\&.c\&.
.SS "unsigned int FLASH_readU16 (unsigned long addr)"

.PP
Definition at line 377 of file flash\&.c\&.
.SS "unsigned long FLASH_readU32 (unsigned long addr)"

.PP
Definition at line 391 of file flash\&.c\&.
.SS "unsigned long long FLASH_readU64 (unsigned long addr)"

.PP
Definition at line 405 of file flash\&.c\&.
.SS "int FLASH_startWrite (unsigned long dstAddr, unsigned long len)"

.PP
Definition at line 158 of file flash\&.c\&.
.SS "void FLASH_tick (void)"

.PP
Definition at line 228 of file flash\&.c\&.
.SS "int FLASH_writeByteBusy (unsigned long addr, unsigned char byte)"

.PP
Definition at line 106 of file flash\&.c\&.
.SS "int FLASH_writeStr (unsigned char * pSrc, unsigned long len)"

.PP
Definition at line 174 of file flash\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Charger6kW from the source code\&.
